name: Coverage Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov pytest-timeout coverage[toml]

    - name: Run all tests with detailed coverage
      run: |
        pytest tests/ \
          --cov=video_gen \
          --cov=app \
          --cov-report=xml \
          --cov-report=html \
          --cov-report=term-missing \
          --cov-branch \
          -v
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Generate coverage report
      run: |
        coverage report --format=markdown > coverage-report.md
        cat coverage-report.md

    - name: Upload coverage to artifacts
      uses: actions/upload-artifact@v4
      with:
        name: full-coverage-report
        path: |
          coverage.xml
          htmlcov/
          coverage-report.md
        retention-days: 90

    - name: Coverage badge
      if: github.ref == 'refs/heads/main'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Comment PR with coverage
      if: github.event_name == 'pull_request'
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}
        MINIMUM_GREEN: 85
        MINIMUM_ORANGE: 75

    - name: Detailed coverage summary
      if: always()
      run: |
        echo "## Detailed Coverage Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Coverage by Module" >> $GITHUB_STEP_SUMMARY
        coverage report --format=markdown >> $GITHUB_STEP_SUMMARY
